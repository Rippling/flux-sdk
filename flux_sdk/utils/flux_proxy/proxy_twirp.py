# -*- coding: utf-8 -*-
# Generated by https://github.com/Rippling/twirp-python/protoc-gen-twirp_python.  DO NOT EDIT!
# source: flux/proxy/v1/proxy.proto

from google.protobuf import symbol_database as _symbol_database
from twirp.base import Endpoint
from twirp.client import TwirpClient
from twirp.server import TwirpServer

_sym_db = _symbol_database.Default()


class FluxProxyServiceServer(TwirpServer):

    def __init__(self, *args, service, server_path_prefix="/twirp"):
        super().__init__(service=service)
        self._prefix = F"{server_path_prefix}/flux.proxy.v1.FluxProxyService"
        self._endpoints = {
            "GetCACertificates": Endpoint(
                service_name="FluxProxyService",
                name="GetCACertificates",
                function=getattr(service, "GetCACertificates"),
                input=_sym_db.GetSymbol("flux.proxy.v1.GetCACertificatesRequest"),
                output=_sym_db.GetSymbol("flux.proxy.v1.GetCACertificatesResponse"),
            ),
            "StartSession": Endpoint(
                service_name="FluxProxyService",
                name="StartSession",
                function=getattr(service, "StartSession"),
                input=_sym_db.GetSymbol("flux.proxy.v1.StartSessionRequest"),
                output=_sym_db.GetSymbol("flux.proxy.v1.StartSessionResponse"),
            ),
            "EndSession": Endpoint(
                service_name="FluxProxyService",
                name="EndSession",
                function=getattr(service, "EndSession"),
                input=_sym_db.GetSymbol("flux.proxy.v1.EndSessionRequest"),
                output=_sym_db.GetSymbol("flux.proxy.v1.EndSessionResponse"),
            )
        }


class FluxProxyServiceClient(TwirpClient):

    def GetCACertificates(self, *, ctx, request, adapter=None, server_path_prefix="/twirp", **kwargs):
        return self._make_request(
            url=F"{server_path_prefix}/flux.proxy.v1.FluxProxyService/GetCACertificates",
            ctx=ctx,
            request=request,
            response_obj=_sym_db.GetSymbol("flux.proxy.v1.GetCACertificatesResponse"),
            adapter=adapter,
            **kwargs,
        )

    def StartSession(self, *, ctx, request, adapter=None, server_path_prefix="/twirp", **kwargs):
        return self._make_request(
            url=F"{server_path_prefix}/flux.proxy.v1.FluxProxyService/StartSession",
            ctx=ctx,
            request=request,
            response_obj=_sym_db.GetSymbol("flux.proxy.v1.StartSessionResponse"),
            adapter=adapter,
            **kwargs,
        )

    def EndSession(self, *, ctx, request, adapter=None, server_path_prefix="/twirp", **kwargs):
        return self._make_request(
            url=F"{server_path_prefix}/flux.proxy.v1.FluxProxyService/EndSession",
            ctx=ctx,
            request=request,
            response_obj=_sym_db.GetSymbol("flux.proxy.v1.EndSessionResponse"),
            adapter=adapter,
            **kwargs,
        )



