"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import sys
import typing

import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.timestamp_pb2

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CredentialType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _CredentialTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CredentialType.ValueType], builtins.type):  # noqa: E501
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    CREDENTIAL_TYPE_UNSPECIFIED: _CredentialType.ValueType  # 0
    CREDENTIAL_TYPE_BASIC: _CredentialType.ValueType  # 1
    CREDENTIAL_TYPE_API_KEY: _CredentialType.ValueType  # 2
    CREDENTIAL_TYPE_OAUTH: _CredentialType.ValueType  # 3
    CREDENTIAL_TYPE_GOOGLE_JSON: _CredentialType.ValueType  # 4
    CREDENTIAL_TYPE_BEARER_TOKEN: _CredentialType.ValueType  # 5
    CREDENTIAL_TYPE_AUTHORIZATION_HEADER: _CredentialType.ValueType  # 6
    CREDENTIAL_TYPE_OAUTH_CLIENT_CREDENTIAL: _CredentialType.ValueType  # 7
    CREDENTIAL_TYPE_AWS_ACCESS_TOKEN: _CredentialType.ValueType  # 8
    CREDENTIAL_TYPE_AWS_ASSUME_ROLE: _CredentialType.ValueType  # 9

class CredentialType(_CredentialType, metaclass=_CredentialTypeEnumTypeWrapper): ...

CREDENTIAL_TYPE_UNSPECIFIED: CredentialType.ValueType  # 0
CREDENTIAL_TYPE_BASIC: CredentialType.ValueType  # 1
CREDENTIAL_TYPE_API_KEY: CredentialType.ValueType  # 2
CREDENTIAL_TYPE_OAUTH: CredentialType.ValueType  # 3
CREDENTIAL_TYPE_GOOGLE_JSON: CredentialType.ValueType  # 4
CREDENTIAL_TYPE_BEARER_TOKEN: CredentialType.ValueType  # 5
CREDENTIAL_TYPE_AUTHORIZATION_HEADER: CredentialType.ValueType  # 6
CREDENTIAL_TYPE_OAUTH_CLIENT_CREDENTIAL: CredentialType.ValueType  # 7
CREDENTIAL_TYPE_AWS_ACCESS_TOKEN: CredentialType.ValueType  # 8
CREDENTIAL_TYPE_AWS_ASSUME_ROLE: CredentialType.ValueType  # 9
global___CredentialType = CredentialType

@typing.final
class GetCACertificatesRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___GetCACertificatesRequest = GetCACertificatesRequest

@typing.final
class GetCACertificatesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CA_CERTIFICATES_FIELD_NUMBER: builtins.int
    @property
    def ca_certificates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The CA certificate(s) that are used for signing SSL certificates created by the proxy in PEM format.  The
        certificate(s) need to be added to the trust chain of the client in order to trust SSL connections that are
        terminated by the proxy.
        """

    def __init__(
        self,
        *,
        ca_certificates: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["ca_certificates", b"ca_certificates"]) -> None: ...

global___GetCACertificatesResponse = GetCACertificatesResponse

@typing.final
class HttpHeader(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        values: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["name", b"name", "values", b"values"]) -> None: ...

global___HttpHeader = HttpHeader

@typing.final
class StartSessionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EXPIRES_AT_FIELD_NUMBER: builtins.int
    ALLOW_HOSTS_FIELD_NUMBER: builtins.int
    CREDENTIAL_IDS_FIELD_NUMBER: builtins.int
    HEADERS_FIELD_NUMBER: builtins.int
    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """
        The time when the session expires.  Sessions can be ended early by calling EndSession, but they must have an end
        time.  The maximum permitted session length is 24 hours.
        """

    @property
    def allow_hosts(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """
        The hosts that the session is allowed to connect to.  If empty, the session is allowed to connect to any host.
        Hosts are exact matches, so if a session is allowed to connect to "example.com", it will not be allowed
        to connect to "www.example.com".  No wildcards are supported.

        If empty, then there will be no restrictions on the hosts that the session is allowed to connect to.
        """

    @property
    def credential_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """
        The credentials that should be injected for outbound requests.  Credentials must have been previously saved via
        the NewCredential method.  If a credential is not found, the request will still be processed.

        This may be left empty if there are no credentials required by this session.
        """

    @property
    def headers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HttpHeader]:
        """Any HTTP headers that should be added to the outbound request."""

    def __init__(
        self,
        *,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        allow_hosts: collections.abc.Iterable[builtins.str] | None = ...,
        credential_ids: collections.abc.Iterable[builtins.str] | None = ...,
        headers: collections.abc.Iterable[global___HttpHeader] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["expires_at", b"expires_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allow_hosts", b"allow_hosts", "credential_ids", b"credential_ids", "expires_at", b"expires_at", "headers", b"headers"]) -> None: ...  # noqa: E501

global___StartSessionRequest = StartSessionRequest

@typing.final
class StartSessionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_ID_FIELD_NUMBER: builtins.int
    SECRET_FIELD_NUMBER: builtins.int
    session_id: builtins.str
    """The session ID that was created.  This will need to be passed as the username in the Proxy-Authorization header
    when passing requests through the proxy.  The proxy will return HTTP code 407 (Proxy Authentication Required) if
    the session is not valid.
    """
    secret: builtins.str
    """The secret.  This will need to be passed as the password in the Proxy-Authorization header when passing requests
    through the proxy.  The proxy will return HTTP code 407 (Proxy Authentication Required) if the password does not
    match this secret.  The secret cannot be retrieved after the session has been created, so the caller must capture
    this value.

    Deprecated: The secret field is deprecated and will be removed in a future release.  It will always be empty.
    """
    def __init__(
        self,
        *,
        session_id: builtins.str = ...,
        secret: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["secret", b"secret", "session_id", b"session_id"]) -> None: ...

global___StartSessionResponse = StartSessionResponse

@typing.final
class EndSessionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_ID_FIELD_NUMBER: builtins.int
    session_id: builtins.str
    """The session ID that should be ended."""
    def __init__(
        self,
        *,
        session_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["session_id", b"session_id"]) -> None: ...

global___EndSessionRequest = EndSessionRequest

@typing.final
class EndSessionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___EndSessionResponse = EndSessionResponse

@typing.final
class BasicCredential(google.protobuf.message.Message):
    """A username/password pair to be sent as a Basic Auth header."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERNAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    username: builtins.str
    password: builtins.str
    def __init__(
        self,
        *,
        username: builtins.str = ...,
        password: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["password", b"password", "username", b"username"]) -> None: ...

global___BasicCredential = BasicCredential

@typing.final
class ApiKey(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    SECRET_FIELD_NUMBER: builtins.int
    header: builtins.str
    secret: builtins.str
    def __init__(
        self,
        *,
        header: builtins.str = ...,
        secret: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["header", b"header", "secret", b"secret"]) -> None: ...

global___ApiKey = ApiKey

@typing.final
class ApiKeysCredential(google.protobuf.message.Message):
    """Arbitrary key/secret pairs to be sent as an API key.  These will be sent as HTTP headers."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEYS_FIELD_NUMBER: builtins.int
    @property
    def keys(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ApiKey]: ...
    def __init__(
        self,
        *,
        keys: collections.abc.Iterable[global___ApiKey] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["keys", b"keys"]) -> None: ...

global___ApiKeysCredential = ApiKeysCredential

@typing.final
class OAuthCredential(google.protobuf.message.Message):
    """
    An OAuth credential.  At a minimum, the type, access token, and expires at fields must be set.  The other fields are
    used when a refresh token is available.  All of the refresh token-related must be set or none.

    This is the credential to use for an authorization_code grant (in which case it basically is a bearer token) or an
    authorization_code grant with a refresh_token grant as well.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_TYPE_FIELD_NUMBER: builtins.int
    ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    CLIENT_ID_FIELD_NUMBER: builtins.int
    CLIENT_SECRET_FIELD_NUMBER: builtins.int
    REFRESH_TOKEN_FIELD_NUMBER: builtins.int
    TOKEN_URL_FIELD_NUMBER: builtins.int
    token_type: builtins.str
    access_token: builtins.str
    client_id: builtins.str
    """optional refresh token fields"""
    client_secret: builtins.str
    refresh_token: builtins.str
    token_url: builtins.str
    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        token_type: builtins.str = ...,
        access_token: builtins.str = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        client_id: builtins.str = ...,
        client_secret: builtins.str = ...,
        refresh_token: builtins.str = ...,
        token_url: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["expires_at", b"expires_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["access_token", b"access_token", "client_id", b"client_id", "client_secret", b"client_secret", "expires_at", b"expires_at", "refresh_token", b"refresh_token", "token_type", b"token_type", "token_url", b"token_url"]) -> None: ...  # noqa: E501

global___OAuthCredential = OAuthCredential

@typing.final
class GoogleJSONCredential(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    JSON_FIELD_NUMBER: builtins.int
    json: builtins.str
    def __init__(
        self,
        *,
        json: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["json", b"json"]) -> None: ...

global___GoogleJSONCredential = GoogleJSONCredential

@typing.final
class BearerTokenCredential(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    token: builtins.str
    def __init__(
        self,
        *,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["token", b"token"]) -> None: ...

global___BearerTokenCredential = BearerTokenCredential

@typing.final
class AuthorizationHeaderCredential(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEME_FIELD_NUMBER: builtins.int
    TOKEN_FIELD_NUMBER: builtins.int
    scheme: builtins.str
    token: builtins.str
    def __init__(
        self,
        *,
        scheme: builtins.str = ...,
        token: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["scheme", b"scheme", "token", b"token"]) -> None: ...

global___AuthorizationHeaderCredential = AuthorizationHeaderCredential

@typing.final
class OAuthClientCredential(google.protobuf.message.Message):
    """
    An OAuth credential with a client_credentials grant. These credentials will be used to mint temporary access tokens.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLIENT_ID_FIELD_NUMBER: builtins.int
    CLIENT_SECRET_FIELD_NUMBER: builtins.int
    TOKEN_URL_FIELD_NUMBER: builtins.int
    client_id: builtins.str
    client_secret: builtins.str
    token_url: builtins.str
    def __init__(
        self,
        *,
        client_id: builtins.str = ...,
        client_secret: builtins.str = ...,
        token_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["client_id", b"client_id", "client_secret", b"client_secret", "token_url", b"token_url"]) -> None: ...  # noqa: E501

global___OAuthClientCredential = OAuthClientCredential

@typing.final
class AWSAccessKeyCredential(google.protobuf.message.Message):
    """AWSAccessKeyCredential represents long-term AWS User security credentials for an account."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    ACCESS_KEY_ID_FIELD_NUMBER: builtins.int
    ACCESS_KEY_SECRET_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """required."""
    access_key_id: builtins.str
    """required."""
    access_key_secret: builtins.str
    """required."""
    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        access_key_id: builtins.str = ...,
        access_key_secret: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["access_key_id", b"access_key_id", "access_key_secret", b"access_key_secret", "account_id", b"account_id"]) -> None: ...  # noqa: E501

global___AWSAccessKeyCredential = AWSAccessKeyCredential

@typing.final
class AWSAssumeRoleCredential(google.protobuf.message.Message):
    """AWSAssumeRolecredential represents the configuration to assume an AWS Role"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNT_ID_FIELD_NUMBER: builtins.int
    ROLE_ARN_FIELD_NUMBER: builtins.int
    DURATION_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    account_id: builtins.str
    """required."""
    role_arn: builtins.str
    """required."""
    duration: builtins.str
    """optional."""
    external_id: builtins.str
    """optional. used in assuming roles in external accounts."""
    def __init__(
        self,
        *,
        account_id: builtins.str = ...,
        role_arn: builtins.str = ...,
        duration: builtins.str = ...,
        external_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["account_id", b"account_id", "duration", b"duration", "external_id", b"external_id", "role_arn", b"role_arn"]) -> None: ...  # noqa: E501

global___AWSAssumeRoleCredential = AWSAssumeRoleCredential

@typing.final
class NewCredentialRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASIC_CREDENTIAL_FIELD_NUMBER: builtins.int
    API_KEYS_CREDENTIAL_FIELD_NUMBER: builtins.int
    OAUTH_CREDENTIAL_FIELD_NUMBER: builtins.int
    GOOGLE_JSON_CREDENTIAL_FIELD_NUMBER: builtins.int
    BEARER_TOKEN_CREDENTIAL_FIELD_NUMBER: builtins.int
    AUTHORIZATION_HEADER_CREDENTIAL_FIELD_NUMBER: builtins.int
    OAUTH_CLIENT_CREDENTIAL_FIELD_NUMBER: builtins.int
    AWS_ACCESS_KEY_CREDENTIAL_FIELD_NUMBER: builtins.int
    AWS_ASSUME_ROLE_CREDENTIAL_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    @property
    def basic_credential(self) -> global___BasicCredential: ...
    @property
    def api_keys_credential(self) -> global___ApiKeysCredential: ...
    @property
    def oauth_credential(self) -> global___OAuthCredential: ...
    @property
    def google_json_credential(self) -> global___GoogleJSONCredential: ...
    @property
    def bearer_token_credential(self) -> global___BearerTokenCredential: ...
    @property
    def authorization_header_credential(self) -> global___AuthorizationHeaderCredential: ...
    @property
    def oauth_client_credential(self) -> global___OAuthClientCredential: ...
    @property
    def aws_access_key_credential(self) -> global___AWSAccessKeyCredential: ...
    @property
    def aws_assume_role_credential(self) -> global___AWSAssumeRoleCredential: ...
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """
        Indicates which domains this credential can be used with.  Domain is defined as a suffix match against the host.
        For example, if a domain is "example.com", it will match "example.com" and "www.example.com" but not
        "example.org" or "myexample.org".  This acts as a protection mechanism to prevent credentials from accidentally
        being sent to the wrong host.

        There is no wildcard support, so the domain suffix must be an exact match.
        """

    def __init__(
        self,
        *,
        basic_credential: global___BasicCredential | None = ...,
        api_keys_credential: global___ApiKeysCredential | None = ...,
        oauth_credential: global___OAuthCredential | None = ...,
        google_json_credential: global___GoogleJSONCredential | None = ...,
        bearer_token_credential: global___BearerTokenCredential | None = ...,
        authorization_header_credential: global___AuthorizationHeaderCredential | None = ...,
        oauth_client_credential: global___OAuthClientCredential | None = ...,
        aws_access_key_credential: global___AWSAccessKeyCredential | None = ...,
        aws_assume_role_credential: global___AWSAssumeRoleCredential | None = ...,
        domains: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["api_keys_credential", b"api_keys_credential", "authorization_header_credential", b"authorization_header_credential", "aws_access_key_credential", b"aws_access_key_credential", "aws_assume_role_credential", b"aws_assume_role_credential", "basic_credential", b"basic_credential", "bearer_token_credential", b"bearer_token_credential", "credential", b"credential", "google_json_credential", b"google_json_credential", "oauth_client_credential", b"oauth_client_credential", "oauth_credential", b"oauth_credential"]) -> builtins.bool: ...  # noqa: E501
    def ClearField(self, field_name: typing.Literal["api_keys_credential", b"api_keys_credential", "authorization_header_credential", b"authorization_header_credential", "aws_access_key_credential", b"aws_access_key_credential", "aws_assume_role_credential", b"aws_assume_role_credential", "basic_credential", b"basic_credential", "bearer_token_credential", b"bearer_token_credential", "credential", b"credential", "domains", b"domains", "google_json_credential", b"google_json_credential", "oauth_client_credential", b"oauth_client_credential", "oauth_credential", b"oauth_credential"]) -> None: ...  # noqa: E501
    def WhichOneof(self, oneof_group: typing.Literal["credential", b"credential"]) -> typing.Literal["basic_credential", "api_keys_credential", "oauth_credential", "google_json_credential", "bearer_token_credential", "authorization_header_credential", "oauth_client_credential", "aws_access_key_credential", "aws_assume_role_credential"] | None: ...  # noqa: E501

global___NewCredentialRequest = NewCredentialRequest

@typing.final
class NewCredentialResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREDENTIAL_ID_FIELD_NUMBER: builtins.int
    credential_id: builtins.str
    """The created credential ID.  This will be used to reference the credential in the StartSession method."""
    def __init__(
        self,
        *,
        credential_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["credential_id", b"credential_id"]) -> None: ...

global___NewCredentialResponse = NewCredentialResponse

@typing.final
class CheckCredentialRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREDENTIAL_ID_FIELD_NUMBER: builtins.int
    credential_id: builtins.str
    """The credential to check."""
    def __init__(
        self,
        *,
        credential_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["credential_id", b"credential_id"]) -> None: ...

global___CheckCredentialRequest = CheckCredentialRequest

@typing.final
class CheckCredentialResponse(google.protobuf.message.Message):
    """Metadata about the credential (but not the credential itself)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREDENTIAL_ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    DOMAINS_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    INVALID_AS_OF_FIELD_NUMBER: builtins.int
    credential_id: builtins.str
    type: global___CredentialType.ValueType
    @property
    def domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """
        domains echos back the domains that were set when the credential was created.  This is useful for debugging.
        """

    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """
        expires_at is optionally set if there is a known expiry for the credential. This field will currently only
        set for oauth tokens.
        """

    @property
    def invalid_as_of(self) -> google.protobuf.timestamp_pb2.Timestamp:
        """invalid_as_of is set if the credential has stopped or will stop working.  This could happen for a variety of
        reasons including an expired access token, a revoked API key, or a password change.  This field is set by the
        proxy.  Currently this will only be set for oauth tokens.

        If this field is set, the credential should be deleted and a new one created after the invalid_as_of time.
        """

    def __init__(
        self,
        *,
        credential_id: builtins.str = ...,
        type: global___CredentialType.ValueType = ...,
        domains: collections.abc.Iterable[builtins.str] | None = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        invalid_as_of: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["expires_at", b"expires_at", "invalid_as_of", b"invalid_as_of"]) -> builtins.bool: ...  # noqa: E501
    def ClearField(self, field_name: typing.Literal["credential_id", b"credential_id", "domains", b"domains", "expires_at", b"expires_at", "invalid_as_of", b"invalid_as_of", "type", b"type"]) -> None: ...  # noqa: E501

global___CheckCredentialResponse = CheckCredentialResponse

@typing.final
class DeleteCredentialRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREDENTIAL_ID_FIELD_NUMBER: builtins.int
    credential_id: builtins.str
    """The credential to delete."""
    def __init__(
        self,
        *,
        credential_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["credential_id", b"credential_id"]) -> None: ...

global___DeleteCredentialRequest = DeleteCredentialRequest

@typing.final
class DeleteCredentialResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteCredentialResponse = DeleteCredentialResponse

@typing.final
class UpdateCredentialRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CREDENTIAL_ID_FIELD_NUMBER: builtins.int
    BASIC_CREDENTIAL_FIELD_NUMBER: builtins.int
    API_KEYS_CREDENTIAL_FIELD_NUMBER: builtins.int
    OAUTH_CREDENTIAL_FIELD_NUMBER: builtins.int
    GOOGLE_JSON_CREDENTIAL_FIELD_NUMBER: builtins.int
    BEARER_TOKEN_CREDENTIAL_FIELD_NUMBER: builtins.int
    AUTHORIZATION_HEADER_CREDENTIAL_FIELD_NUMBER: builtins.int
    OAUTH_CLIENT_CREDENTIAL_FIELD_NUMBER: builtins.int
    AWS_ACCESS_KEY_CREDENTIAL_FIELD_NUMBER: builtins.int
    AWS_ASSUME_ROLE_CREDENTIAL_FIELD_NUMBER: builtins.int
    credential_id: builtins.str
    @property
    def basic_credential(self) -> global___BasicCredential: ...
    @property
    def api_keys_credential(self) -> global___ApiKeysCredential: ...
    @property
    def oauth_credential(self) -> global___OAuthCredential: ...
    @property
    def google_json_credential(self) -> global___GoogleJSONCredential: ...
    @property
    def bearer_token_credential(self) -> global___BearerTokenCredential: ...
    @property
    def authorization_header_credential(self) -> global___AuthorizationHeaderCredential: ...
    @property
    def oauth_client_credential(self) -> global___OAuthClientCredential: ...
    @property
    def aws_access_key_credential(self) -> global___AWSAccessKeyCredential: ...
    @property
    def aws_assume_role_credential(self) -> global___AWSAssumeRoleCredential: ...
    def __init__(
        self,
        *,
        credential_id: builtins.str = ...,
        basic_credential: global___BasicCredential | None = ...,
        api_keys_credential: global___ApiKeysCredential | None = ...,
        oauth_credential: global___OAuthCredential | None = ...,
        google_json_credential: global___GoogleJSONCredential | None = ...,
        bearer_token_credential: global___BearerTokenCredential | None = ...,
        authorization_header_credential: global___AuthorizationHeaderCredential | None = ...,
        oauth_client_credential: global___OAuthClientCredential | None = ...,
        aws_access_key_credential: global___AWSAccessKeyCredential | None = ...,
        aws_assume_role_credential: global___AWSAssumeRoleCredential | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["api_keys_credential", b"api_keys_credential", "authorization_header_credential", b"authorization_header_credential", "aws_access_key_credential", b"aws_access_key_credential", "aws_assume_role_credential", b"aws_assume_role_credential", "basic_credential", b"basic_credential", "bearer_token_credential", b"bearer_token_credential", "credential", b"credential", "google_json_credential", b"google_json_credential", "oauth_client_credential", b"oauth_client_credential", "oauth_credential", b"oauth_credential"]) -> builtins.bool: ...  # noqa: E501
    def ClearField(self, field_name: typing.Literal["api_keys_credential", b"api_keys_credential", "authorization_header_credential", b"authorization_header_credential", "aws_access_key_credential", b"aws_access_key_credential", "aws_assume_role_credential", b"aws_assume_role_credential", "basic_credential", b"basic_credential", "bearer_token_credential", b"bearer_token_credential", "credential", b"credential", "credential_id", b"credential_id", "google_json_credential", b"google_json_credential", "oauth_client_credential", b"oauth_client_credential", "oauth_credential", b"oauth_credential"]) -> None: ...  # noqa: E501
    def WhichOneof(self, oneof_group: typing.Literal["credential", b"credential"]) -> typing.Literal["basic_credential", "api_keys_credential", "oauth_credential", "google_json_credential", "bearer_token_credential", "authorization_header_credential", "oauth_client_credential", "aws_access_key_credential", "aws_assume_role_credential"] | None: ...  # noqa: E501

global___UpdateCredentialRequest = UpdateCredentialRequest

@typing.final
class UpdateCredentialResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___UpdateCredentialResponse = UpdateCredentialResponse
